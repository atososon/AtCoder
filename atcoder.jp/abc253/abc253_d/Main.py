#!/usr/bin/env python3
import sys
import math


def solve(N: int, A: int, B: int):
    icm = math.gcd(A, B) * (A//math.gcd(A, B)) * (B//math.gcd(A, B))
    n = (1 + N)*N//2
    a = (A + (A*(N//A))) * (N//A)//2
    b = (B + (B*(N//B))) * (N//B)//2
    ab = (icm + (icm*(N//icm))) * (N//icm)//2
    ans = n - (a + b - ab)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    solve(N, A, B)


if __name__ == '__main__':
    main()
