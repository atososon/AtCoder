#!/usr/bin/env python3
from collections import defaultdict
import heapq
# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)


def main():
    Q = int(input())
    s = defaultdict(int)
    s_max = list()
    s_min = list()
    for _ in range(Q):
        q = list(map(int, input().split()))
        if q[0] == 1:
            x = q[1]
            s[x] += 1
            heapq.heappush(s_max, -x)
            heapq.heappush(s_min, x)
        elif q[0] == 2:
            x = q[1]
            c = q[2]
            s[x] -= min(c, s[x])
        else:
            smin = heapq.heappop(s_min)
            while s[smin] == 0:
                smin = heapq.heappop(s_min)
            smax = heapq.heappop(s_max)
            smax *= -1
            while s[smax] == 0:
                smax = heapq.heappop(s_max)
                smax *= -1
            print(smax - smin)
            heapq.heappush(s_max, -smax)
            heapq.heappush(s_min, smin)


if __name__ == '__main__':
    main()
