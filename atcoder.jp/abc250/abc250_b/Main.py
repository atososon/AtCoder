#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int):
    ans = [["." for _ in range(B*N)] for _ in range(A*N)]
    for i in range(A*N):
        for j in range(B*N):
            if (i//A + j//B) % 2 == 1:
                ans[i][j] = "#"
    for i in ans:
        print(*i, sep="")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    solve(N, A, B)


if __name__ == '__main__':
    main()
