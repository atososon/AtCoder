#!/usr/bin/env python3
import sys
from collections import Counter
MOD = 10  # type: int


def solve(N: int, S: "List[str]"):
    ans = float("inf")
    for i in range(10):
        n = str(i)
        n_index_list = [s.index(n) for s in S]
        for n_index in set(n_index_list):
            count = n_index_list.count(n_index)
            if count > 1:
                n_index_list.append(n_index + (count-1)*10)
        ans = min(ans, max(n_index_list))
    print(ans)

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, S)


if __name__ == '__main__':
    main()
