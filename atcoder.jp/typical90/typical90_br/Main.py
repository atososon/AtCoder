#!/usr/bin/env python3
import sys


def solve(N: int, X: "List[int]", Y: "List[int]"):
    x_sort = sorted(X)
    y_sort = sorted(Y)
    x_median = x_sort[N//2]
    y_median = y_sort[N//2]
    ans = 0
    for i in range(N):
        ans += abs(X[i]-x_median) + abs(Y[i]-y_median)
    print(ans)
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    X = [int()] * (N)  # type: "List[int]"
    Y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        X[i] = int(next(tokens))
        Y[i] = int(next(tokens))
    solve(N, X, Y)


if __name__ == '__main__':
    main()
