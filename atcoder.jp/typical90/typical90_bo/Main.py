#!/usr/bin/env python3
import sys

def solve(N: int, K: int):
    if N == 0:
        print(0)
        return
    N = str(N)
    for _ in range(K):
        temp = 0
        for i in range(len(N)):
            temp += int(N[i]) * 8**(len(N)-i-1)
        s = ""
        while temp != 0:
            s += str(temp%9)
            temp //= 9
        s = s[::-1]
        for j in range(len(s)):
            if s[j] == "8":
                s = s[:j] + "5" + s[j+1:]
        N = s
    print(N)
    return


# Generated by 2.4.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
