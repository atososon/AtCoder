#!/usr/bin/env python3
from collections import deque

# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)


def main():
    h, w = map(int, input().split())
    r_s, c_s = map(int, input().split())
    r_t, c_t = map(int, input().split())
    f = list()
    f.append(["#"]*(w+2))
    for _ in range(h):
        r = list(input())
        f.append(["#"] + r + ["#"])
    f.append(["#"]*(w+2))
    cost_li = [[float("inf") for _ in range(w+2)] for _ in range(h+2)]
    cost_li[r_s][c_s] = -1
    direction = [[1, 0], [-1, 0], [0, 1], [0, -1]]

    def bfs():
        q = deque()
        q.append((r_s, c_s))
        while q:
            i, j = q.popleft()
            cost = cost_li[i][j]
            if i == r_t and j == c_t:
                break
            for r, c in direction:
                rn = i + r
                cn = j + c
                while f[rn][cn] == "." and cost + 1 <= cost_li[rn][cn]:
                    q.append((rn, cn))
                    cost_li[rn][cn] = cost + 1
                    rn += r
                    cn += c
    bfs()
    print(cost_li[r_t][c_t])


if __name__ == '__main__':
    main()
