#!/usr/bin/env python3
import sys

MOD = 7  # type: int


def solve(N: int, P: int, Q: int, A: "List[int]"):
    ans = 0
    
    for i in range(N-4):
        for j in range(i+1,N-3):
            for k in range(j+1, N-2):
                for l in range(k+1, N-1):
                    for m in range(l+1, N):
                        if A[i]*A[j]%P*A[k]%P*A[l]%P*A[m]%P == Q:
                            ans += 1
    
    print(ans)                    
    
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = int(next(tokens))  # type: int
    Q = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, P, Q, A)

if __name__ == '__main__':
    main()
