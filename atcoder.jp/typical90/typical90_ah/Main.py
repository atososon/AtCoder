#!/usr/bin/env python3
import sys
from collections import deque, Counter


def solve(N: int, K: int, a: "List[int]"):
    judge = dict()
    ans = 1
    i = 0
    j = 0
    q = deque()
    while i < N:
        q.append(a[i])
        if a[i] in judge:
            judge[a[i]] += 1
        else:
            judge[a[i]] = 1
        i += 1
        while K < len(judge):
            m = q.popleft()
            judge[m] -= 1
            if judge[m] == 0:
                del judge[m]
            j += 1
        ans = max(ans, len(q))
    print(ans)
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, a)


if __name__ == '__main__':
    main()
