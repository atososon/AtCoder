#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int, C: int):
    ans = 10**9
    for i in range(10**4):
        if A*i > N:
            break
        for j in range(10**4):
            if A*i + B*j > N or i + j >= 10**4:
                break
            if (N-A*i-B*j)%C==0:
                ans = min(ans, i+j+(N-A*i-B*j)//C) 
    print(ans)
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    solve(N, A, B, C)

if __name__ == '__main__':
    main()
