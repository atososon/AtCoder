#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def f(n):
    return (((n % MOD) * ((n+1) % MOD)) // 2) % MOD


def e(i, L, R):
    return f(min(pow(10, i)-1, R)) - f(max(pow(10, i-1), L) - 1)


def solve(L: int, R: int):
    ans = 0
    for i in range(len(str(L)), len(str(R))+1):
        ans += i * e(i, L, R)
        ans %= MOD
    print(ans)
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    L = int(next(tokens))  # type: int
    R = int(next(tokens))  # type: int
    solve(L, R)


if __name__ == '__main__':
    main()
