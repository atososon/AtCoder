#!/usr/bin/env python3
import sys

MOD = 200  # type: int
YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, A: "List[int]"):
    mod = {}
    for i in range(1, 2**N):
        s = format(i, f"0{N}b")
        x = list()
        a = 0
        for j in range(N):
            if s[j] == "1":
                a += A[j]
                x.append(j+1)
        a %= MOD
        if a in mod:
            print(YES)
            print(len(x), *x)
            print(len(mod[a]),*mod[a])
            return
        else:
            mod[a] = x
            
    print(NO)
    return


# Generated by 2.3.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
