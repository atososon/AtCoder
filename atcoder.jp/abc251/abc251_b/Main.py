#!/usr/bin/env python3
import sys


def solve(N: int, W: int, A: "List[int]"):
    ans = list()
    for i in A:
        if i <= W:
            ans.append(i)
    for i in range(N):
        for j in range(i+1, N):
            if A[i] + A[j] <= W:
                ans.append(A[i] + A[j])
    for i in range(N):
        for j in range(i+1, N):
            for k in range(j+1, N):
                if A[i] + A[j] + A[k] <= W:
                    ans.append(A[i] + A[j] + A[k])
    print(len(set(ans)))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, W, A)


if __name__ == '__main__':
    main()
