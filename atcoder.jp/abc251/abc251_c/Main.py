#!/usr/bin/env python3
import sys


def solve(N: int, S: "List[str]", T: "List[int]"):
    original = list()
    original_set = set()
    for i, s in enumerate(S):
        if s not in original_set:
            original.append([T[i], s, i])
            original_set.add(s)
    original.sort()
    max_point = original[-1][0]
    ans = float("inf")
    for i, t, s in original:
        if i == max_point:
            ans = min(ans, s+1)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [str()] * (N)  # type: "List[str]"
    T = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        S[i] = next(tokens)
        T[i] = int(next(tokens))
    solve(N, S, T)


if __name__ == '__main__':
    main()
