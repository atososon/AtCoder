#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, X: int, a: "List[int]", b: "List[int]"):
    ans = {0}
    for i in range(N):
        temp = set()
        for _ in range(len(ans)):
            s = ans.pop()
            temp.add(s+a[i])
            temp.add(s+b[i])
        ans = temp
    if X in ans:
        print(YES)
    else:
        print(NO)

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    X = int(next(tokens))  # type: int
    a = [int()] * (N)  # type: "List[int]"
    b = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        a[i] = int(next(tokens))
        b[i] = int(next(tokens))
    solve(N, X, a, b)


if __name__ == '__main__':
    main()
