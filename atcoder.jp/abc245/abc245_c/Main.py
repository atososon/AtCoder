#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, K: int, A: "List[int]", B: "List[int]"):
    s = (A[0], B[0])
    ans = True
    for i in range(1, N):
        jadge = False
        s_temp = set()
        for j in s:
            if abs(j - A[i]) <= K and not A[i] in s:
                s_temp.add(A[i])
                jadge = True
            if abs(j - B[i]) <= K and not B[i] in s:
                s_temp.add(B[i])
                jadge = True
        s = s_temp
        if not jadge:
            ans = False

    if ans:
        print(YES)
    else:
        print(NO)

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, A, B)


if __name__ == '__main__':
    main()
