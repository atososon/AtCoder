#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int

def solve(S: str):
    ans = 0
    dp = [[0 for _ in range(9)] for _ in range(len(S)+1)]
    dp[0][0] = 1
    for i,s in enumerate(S):
        i += 1

        for j in range(9):
            dp[i][j] += dp[i-1][j]
            dp[i][j] %= MOD
        if s == "c":
            dp[i][1] += dp[i-1][0]
        elif s == "h":
            dp[i][2] += dp[i-1][1]
        elif s == "o":
            dp[i][3] += dp[i-1][2]
        elif s == "k":
            dp[i][4] += dp[i-1][3]
        elif s == "u":
            dp[i][5] += dp[i-1][4]
        elif s == "d":
            dp[i][6] += dp[i-1][5]
        elif s == "a":
            dp[i][7] += dp[i-1][6]
        elif s == "i":
            dp[i][8] += dp[i-1][7]
        
        
    print(dp[-1][-1]%MOD)

    return


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
