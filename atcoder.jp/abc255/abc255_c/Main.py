#!/usr/bin/env python3
import sys
import math


def solve(X: int, A: int, D: int, N: int):
    if D == 0:
        print(abs(A-X))
        return
    n = max(min(math.ceil((X-A)/D), N-1), 0)
    m = max(min(math.floor((X-A)/D), N-1), 0)
    ans = min(abs((n*D+A) - X), abs((m*D+A) - X))
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    solve(X, A, D, N)


if __name__ == '__main__':
    main()
