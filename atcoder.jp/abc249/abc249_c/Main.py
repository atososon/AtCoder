#!/usr/bin/env python3
import sys
from collections import Counter


def solve(N: int, K: int, S: "List[str]"):
    ans = 0
    for i in range(2**N):
        s = ""
        for j in range(N):
            if ((i >> j) & 1):
                s += S[j]
        c = Counter(list(s))
        ans = max(ans, len([i for i in c.values() if i == K]))
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, K, S)


if __name__ == '__main__':
    main()
